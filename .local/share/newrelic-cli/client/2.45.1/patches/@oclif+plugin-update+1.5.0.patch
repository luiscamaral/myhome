diff --git a/node_modules/@oclif/plugin-update/lib/commands/update.js b/node_modules/@oclif/plugin-update/lib/commands/update.js
index fd05a18..2e2ab71 100644
--- a/node_modules/@oclif/plugin-update/lib/commands/update.js
+++ b/node_modules/@oclif/plugin-update/lib/commands/update.js
@@ -130,11 +130,20 @@ class UpdateCommand extends command_1.default {
             }, 250, { leading: true, trailing: false });
             stream.on('data', data => {
                 current += data.length;
-                updateStatus(`${filesize(current)}/${filesize(total)}`);
+                if (isNaN(total)) {
+                    updateStatus(`${filesize(current)}`);
+                } else {
+                    updateStatus(`${filesize(current)}/${filesize(total)}`);
+                }
             });
         }
         stream.resume();
-        await extraction;
+        try {
+            await extraction;
+        } catch (e) {
+            this.log('Failed to download and extract, retrying...')
+            await this.downloadAndExtract(output, manifest, channel)
+        }
     }
     async update(manifest, channel = 'stable') {
         const { channel: manifestChannel } = manifest;
diff --git a/node_modules/@oclif/plugin-update/lib/hooks/init.js b/node_modules/@oclif/plugin-update/lib/hooks/init.js
index e8b16ee..3616093 100644
--- a/node_modules/@oclif/plugin-update/lib/hooks/init.js
+++ b/node_modules/@oclif/plugin-update/lib/hooks/init.js
@@ -29,7 +29,7 @@ exports.init = async function (opts) {
             const m = await mtime(autoupdatefile);
             let days = 1;
             if (opts.config.channel === 'stable')
-                days = 14;
+                days = 1;
             m.setHours(m.getHours() + (days * 24));
             return m < new Date();
         }
